@import 'essence';
@import 'utilities/color-utils';

$-side-abbrs: (
  top: t,
  bottom: b,
  left: l,
  right: r,
  top-left: tl,
  top-right: tr,
  bottom-left: bl,
  bottom-right: br,
  top-bottom: tb,
  left-right: lr,
) !default;

@function side-abbr($key) {
  $abbr: map-get($-side-abbrs, $key);

  @if $abbr == null {
    @error "mssing side abbr for [#{$key}]";
  }
  @return $abbr;
}

// borders

$-border-widths: 0, 1px, 2px, 3px, 4px !default;
$-border-styles: none, inset, hidden, solid, double, dotted, dashed !default;

.u-bd {
  @include border(all);
}

@each $width in $-border-widths {
  .u-bd-#{strip-unit($width)} {
    @include bdwidth($width, $sides: all);
  }
}

@each $style in $-border-styles {
  .u-bd-#{$style} {
    @include bdstyle($style, $sides: all);
  }
}

@each $side in $-sides {
  $abbr: side-abbr($side);

  .u-bd_#{$abbr} {
    @include border($sides: $side);
  }

  @each $width in $-border-widths {
    .u-bd_#{$abbr}-#{strip-unit($width)} {
      @include bdwidth($width, $sides: $side);
    }
  }

  @each $style in $-border-styles {
    .u-bd_#{$abbr}-#{$style} {
      @include bdstyle($style, $sides: $side);
    }
  }
}

// clearfix

.u-cf {
  @include clearfix;
}

.u-fl {
  float: left;
}

.u-fr {
  float: right;
}

.u-rd {
  border-radius: $-radius-df;
}

@each $key in $-radiuses {
  .u-rd-#{$key} {
    @include radius($key, $sides: all, $trump: true);
  }
}

@each $side in $-sides {
  $side-abbr: side-abbr($side);

  .u-rd-#{$side-abbr} {
    @include radius($sides: $side, $trump: true);
  }

  @each $key in $-radiuses {
    .u-rd-#{$side-abbr}-#{$key} {
      @include radius($key, $sides: $side, $trump: true);
    }
  }
}

// layouts

.u-center {
  @include flex-center;
}

.u-flex {
  @include flex(0.5rem);
}

.u-flow {
  @include flow(1rem);
}

.u-grid {
  @include grid(minmax(1fr, 10rem));
}

// font families

@each $family in map-keys($-font-families) {
  .u-ff-#{$family} {
    @include font-family($family);
  }
}

// paddings

.u-pd {
  @include padding($sides: all, $trump: true);
}

@each $size in $-spacings {
  .u-pd-#{strip-unit($size)} {
    @include padding($size: $size, $sides: all, $trump: true);
  }

  @each $side in join($-sides, $-flanks) {
    $side-abbr: side-abbr($side);

    .u-pd_#{$side-abbr}-#{strip-unit($size)} {
      @include padding($size, $sides: $side, $trump: true);
    }
  }
}

// margins

.u-mg {
  @include margin($sides: all, $trump: true);
}

@each $size in $-spacings {
  .u-mg-#{strip-unit($size)} {
    @include margin($size: $size, $sides: all, $trump: true);
  }

  @each $side in join($-sides, $-flanks) {
    $side-abbr: side-abbr($side);

    .u-mg_#{$side-abbr}-#{strip-unit($size)} {
      @include margin($size, $sides: $side, $trump: true);
    }
  }
}

// positions

@each $sides in $-positions {
  .u-pos-#{$sides} {
    position: $sides;
  }
}

// shadows

@each $key, $val in $-shadows {
  .u-sd-#{$key} {
    box-shadow: $val !important;
  }
}

// z-indexes

@for $idx from 0 to 9 {
  .u-z-#{$idx} {
    z-index: zindex($idx);
  }
}
