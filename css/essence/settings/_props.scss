@function join-props($props...) {
  $out: nth($props, 1);
  $len: length($props);
  @for $idx from 2 through $len {
    $val: nth($props, $idx);
    @if $val {
      $out: #{$out}-#{$val};
    }
  }

  @return $out;
}

@function attrs(
  $xs: null,
  $sm: null,
  $md: null,
  $lg: null,
  $xl: null,
  $df: null
) {
  @if type-of($xs) == map {
    @return $xs;
  }

  @return (
    xs: $xs or $df,
    sm: $sm or $df,
    md: $md or $df,
    lg: $lg or $df,
    xl: $xl or $df
  );
}

@function trump($value, $trump: false) {
  @if $trump {
    @return $value !important;
  }
  @return $value;
}

@mixin apply($props, $value, $trump: false) {
  @if type-of($props) != list {
    $props: ($props);
  }

  $map: attrs($value);
  $old: null;

  @each $key, $val in $map {
    @if ($val and $val != $old) {
      @include screen-min($key) {
        @each $prop in $props {
          #{$prop}: trump($val, $trump);
        }
      }
    }
    $old: $val;
  }
}

@mixin props($props, $value, $trump: false) {
  @warn "deprecated, using apply() instead";
  @include apply($props, $value, $trump);
}
