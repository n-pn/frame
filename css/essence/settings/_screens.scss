// variables

$-xs: 320px !default;
$-sm: 560px !default;
$-md: 800px !default;
$-lg: 1040px !default;
$-xl: 1280px !default;

$-screen-sizes: (
  xs: $-xs,
  sm: $-sm,
  md: $-md,
  lg: $-lg,
  xl: $-xl,
) !default;

$-screen-names: map-keys($-screen-sizes);

// functions

@function screen-size($key) {
  $val: map-get($-screen-sizes, $key);

  @if not $val {
    @warn "custom screen size [#{$key}] is not recommended";
    @return $key;
  }

  @return $val;
}

// extras

@mixin screen-min($min: sm) {
  @if $min == null or $min == xs {
    @content;
  } @else {
    $size-min: screen-size($min);
    @media screen and (min-width: $size-min) {
      @content;
    }
  }
}

@mixin screen-max($max: xl) {
  @if $max == null {
    @content;
  } @else {
    $size-max: screen-size($max) - 1px;
    @media screen and (max-width: $size-max) {
      @content;
    }
  }
}

@mixin screen-range($min: sm, $max: xl) {
  $size-min: screen-size($min);
  $size-max: screen-size($max) - 1px;
  @media screen and (min-width: $size-min) and (max-width: $size-max) {
    @content;
  }
}

@mixin screen-height-min($min: sm) {
  // default is small tablet
  @if $min == null {
    @content;
  } @else {
    $size-min: screen-size($min);
    @media screen and (min-height: $size-min) {
      @content;
    }
  }
}

@mixin screen-height-max($max: xl) {
  // default is large tablet
  @if $max == null {
    @content;
  } @else {
    $size-max: screen-size($max) - 1px;
    @media screen and (max-height: $size-max) {
      @content;
    }
  }
}

@mixin screen-height-range($min: sm, $max: xl) {
  $size-min: screen-size($min);
  $size-max: screen-size($max) - 1px;
  @media screen and (min-height: $size-min) and (max-height: $size-max) {
    @content;
  }
}

// primary

@mixin screen($screen: sm, $max: false) {
  @if $max {
    @include screen-max($screen) {
      @content;
    }
  } @else {
    @include screen-min($screen) {
      @content;
    }
  }
}
