@import 'screens';

/// variables

$-padding-sizes: 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 16, 20, 24, 32, 40, 48, 58, 64 !default;
$-padding-directions: -t, -b, -l, -r, -tb, -lr !default;

// mixins

/// padding mixin
/// @group helpers
/// param {Number} $size - can be a integer or a unit
/// param {String} $dir - directions: -a, -t, -d, -l, -r, -td, -lr
/// param {String} $screen - media screens: -sp, -mp, -lp, -sm, -md, -lg, -xl, -xxl
/// output 'padding-top', 'padding-bottom', 'padding-left' and 'padding-right'
@mixin pd($size, $dir: -a, $screen: null) {
    @if $dir == top or $dir == -t or $dir == -tb or $dir == -a {
        @include screen-min($screen) {
            padding-top: size($size);
        }
    }
    @if $dir == bottom or $dir == -b or $dir == -tb or $dir == -a {
        @include screen-min($screen) {
            padding-bottom: size($size);
        }
    }
    @if $dir == left or $dir == -l or $dir == -lr or $dir == -a {
        @include screen-min($screen) {
            padding-left: size($size);
        }
    }
    @if $dir == right or $dir == -r or $dir == -lr or $dir == -a {
        @include screen-min($screen) {
            padding-right: size($size);
        }
    }
}

// util classes

/// define multiple mixins
@if $-util-classes {
    @each $size in $-space-sizes {
        .__pd-#{$size} {
            @include pd($size, -a);
        }

        @each $dir in $-space-directions {
            .__pd-#{$size}#{$dir} {
                @include pd($size, $dir);
            }

            @each $screen in $-screen-names {
                .__pd-#{$size}#{$dir}#{$screen} {
                    @include screen-min($screen) {
                        @include pd($size, $dir);
                    }
                }
            }
        }
    }
}
