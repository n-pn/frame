// variables

$-font-emoji: 'Apple Color Emoji', 'Noto Color Emoji', 'Segoe UI Emoji',
    'Segoe UI Symbol' !default;

$-font-sans: Roboto, 'Noto Sans', 'Noto Sans CJK SC', -apple-system,
    BlinkMacSystemFont, 'Helvetica Neue', 'Segoe UI', Arial, san-serif;

$-font-mono: Iosevka, 'Sarasa Mono SC', 'Noto Sans Mono CJK SC', Menlo, Monaco,
    Consolas, 'Ubuntu Mono', 'Courier New', monospace !default;

$-font-serif: 'Noto Serif', 'Noto Serif CJK SC', Georgia, Cambria,
    'Times New Roman', Times, serif !default;

$-font-narrow: 'Roboto Condensed', 'Noto Sans Condensed', $font-sans !default;

$-font-families: (
    -sans: $-font-sans,
    -mono: $-font-mono,
    -serif: $-font-serif,
    -narrow: $-font-narrow
);

// functions

@function font-stack($name, $extra: null) {
    $stack: map-get($-font-families, $name);
    @if not type-of($stack) == list {
        @error "no font family named '#{$name}'";
    }

    @if $extra {
        $stack: prepend(remove($stack, $extra), $extra);
    }

    // $stack: append($stack, $-font-emoji);
    @return $stack;
}

// mixins

/// return font stacks
@mixin ff-sans($extra: $-font-default-sans) {
    font-family: font-stack(-sans, $extra);
}
@mixin ff-mono($extra: $-font-default-mono) {
    font-family: font-stack(-mono, $extra);
}
@mixin ff-serif($extra: $-font-default-serif) {
    font-family: font-stack(-serif, $extra);
}
@mixin ff-narrow($extra: $-font-default-narrow) {
    font-family: font-stack(-narrow, $extra);
}

// utils

@if $-util-classes {
    .__ff-sans {
        @include ff-sans;
    }
    .__ff-mono {
        @include ff-mono;
    }
    .__ff-serif {
        @include ff-serif;
    }
    .__ff-narrow {
        @include ff-narrow;
    }
}
