@import 'screens';

/// variables

$-margin-sizes: 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 16, 20, 24, 32, 40, 48, 58, 64 !default;
$-margin-directions: -t, -b, -l, -r, -tb, -lr !default;

// mixins

/// margin mixin
/// @group helpers
/// param {Number} $size - can be a integer or a unit
/// param {String} $dir - directions: all, t, d, l, r, td, lr
/// param {String} $screen - media screens: sp, mp, lp, sm, md, lg, xl, xxl
/// output 'margin-top', 'margin-bottom', 'margin-left' and 'margin-right'
@mixin mg($size, $dir: -a, $screen: null) {
    @if $dir == top or $dir == -t or $dir == -tb or $dir == -a {
        @include screen-min($screen) {
            margin-top: size($size);
        }
    }
    @if $dir == bottom or $dir == -b or $dir == -tb or $dir == -a {
        @include screen-min($screen) {
            margin-bottom: size($size);
        }
    }
    @if $dir == left or $dir == -l or $dir == -lr or $dir == -a {
        @include screen-min($screen) {
            margin-left: size($size);
        }
    }
    @if $dir == right or $dir == -r or $dir == -lr or $dir == -a {
        @include screen-min($screen) {
            margin-right: size($size);
        }
    }
}

// util classes

/// define multiple mixins
@if $-util-classes {
    @each $size in $-margin-sizes {
        .__mg-#{$size} {
            @include mg($size, -a);
        }

        @each $dir in $-margin-directions {
            .__mg-#{$size}#{$dir} {
                @include mg($size, $dir);
            }

            @each $screen in $-screen-names {
                .__mg-#{$size}#{$dir}#{$screen} {
                    @include screen-min($screen) {
                        @include mg($size, $dir);
                    }
                }
            }
        }
    }
}
