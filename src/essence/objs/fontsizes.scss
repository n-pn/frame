@use "../defs" as *;

// configs

$m-font-size-0: rem(10px) !default;
$m-font-size-1: rem(12px) !default;
$m-font-size-2: rem(14px) !default;
$m-font-size-3: rem(16px) !default;
$m-font-size-4: rem(18px) !default;
$m-font-size-5: rem(20px) !default;
$m-font-size-6: rem(24px) !default;
$m-font-size-7: rem(30px) !default;
$m-font-size-8: rem(36px) !default;
$m-font-size-9: rem(48px) !default;

$m-font-sizes: (
  ss: $m-font-size-0,
  xs: $m-font-size-1,
  sm: $m-font-size-2,
  md: $m-font-size-3,
  lg: $m-font-size-4,
  xl: $m-font-size-5,
  x2: $m-font-size-6,
  x3: $m-font-size-7,
  x4: $m-font-size-8,
  x5: $m-font-size-9,
) !default;

$m-size-names: map-keys($m-font-sizes);

@function font-size($key: 3) {
  @if type-of($key) == number {
    @if not unitless($key) {
      @warn "using custom font size: `#{$key}`";
      @return $key;
    }

    $key: nth($m-size-names, $key + 1);
    // prettier-ignore
    @if $key { @return map-get($m-font-sizes, $key); }
    @error "font size index `#{$key}`out of range";
  } @else {
    $value: map-get($m-font-sizes, $key);
    // prettier-ignore
    @if $value { @return $value; }
    @error "`#{$key}` is not a valid font size";
  }
}

@mixin font-size($size: md) {
  font-size: font-size($size);
}

// @debug font-size(1); // expect 0.75rem
// @debug font-size(16px); // expect warning
// @debug font-size(md); // expect 1rem
