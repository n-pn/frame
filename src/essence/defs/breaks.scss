@use "../vars/sizings" as *;

@function screen-size($key) {
  $val: map-get($screens, $key);

  // prettier-ignore
  @if $val { @return $val; }

  @warn "custom screen size `#{$key}` is not recommended";
  @return $key;
}

@mixin screen-min($min: sm) {
  @if $min == null or $min == xs {
    @content;
  } @else {
    $size: screen-size($min);
    @media screen and (min-width: $size) {
      @content;
    }
  }
}

@mixin screen-max($max: xl) {
  @if $max == null {
    @content;
  } @else {
    $size: screen-size($max) - 1px;
    @media screen and (max-width: $size) {
      @content;
    }
  }
}

@mixin screen-minmax($min: sm, $max: xl) {
  $size-min: screen-size($min);
  $size-max: screen-size($max) - 1px;
  @media screen and (min-width: $size-min) and (max-width: $size-max) {
    @content;
  }
}

@mixin props($props, $xs: null, $sm: null, $md: null, $lg: null, $xl: null) {
  $-map: $xs;

  @if type-of($-map) != map {
    $-map: (
      xs: $xs or null,
      sm: $sm or null,
      md: $md or null,
      lg: $lg or null,
      xl: $xl or null,
    );
  }

  $old: null;

  @if type-of($props) != list {
    $props: ($props);
  }

  @each $key, $val in $-map {
    @if ($val and $val != $old) {
      @include screen-min($key) {
        @each $prop in $props {
          #{$prop}: $val;
        }
      }
    }

    $old: $val;
  }
}
